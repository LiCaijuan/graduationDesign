<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.DoctorMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.Doctor">
        <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
        <result column="doctor_name" jdbcType="VARCHAR" property="doctorName" />
        <result column="doctor_department" jdbcType="VARCHAR" property="doctorDepartment" />
        <result column="doctor_price" jdbcType="DOUBLE" property="doctorPrice" />
        <result column="doctor_img" jdbcType="VARCHAR" property="doctorImg" />
        <result column="product_type" jdbcType="INTEGER" property="doctorType" />
        <result column="doctor_order" jdbcType="INTEGER" property="doctorIsOrder" />
        <result column="product_speciality" jdbcType="VARCHAR" property="doctorSpeciality" />
        <result column="product_synopsis" jdbcType="VARCHAR" property="doctorSynopsis" />
    </resultMap>
    <insert id="addDoctor" parameterType="com.example.demo.entity.Doctor">
        INSERT INTO `doctor` (`doctor_name`,`doctor_department`,`doctor_price`,`doctor_img`,`doctor_type`,`doctor_order`, `doctor_speciality`,`doctor_synopsis`) VALUES(#{doctorName},#{doctorDepartment},#{doctorPrice},#{doctorImg},#{doctorType},#{doctorIsOrder},#{doctorSpeciality},#{doctorSynopsis})
    </insert>
    <select id="getDoctorList" resultMap="BaseResultMap">
        SELECT * FROM `doctor`
    </select >
    <select id="getDoctorByKey" resultMap="BaseResultMap">
        SELECT * FROM `doctor` where doctor_name like concat('%',#{doctorName},'%') or doctor_synopsis like  concat('%',#{doctorName},'%')
    </select >
    <select id="getDoctorById" resultMap="BaseResultMap">
        SELECT * FROM `doctor` where doctor_id =#{doctorId}
    </select >
    <select id="getDoctorByCondition" resultMap="BaseResultMap">
        SELECT * FROM `doctor`
        <where>
            <if test="doctorName != null and doctorName != ''">and doctor_name like concat('%',#{doctorName},'%')</if>
            <if test="doctorType != null and doctorType != -1">and doctor_type = #{doctorType}</if>
        </where>
    </select >
    <update id="updateDoctor" parameterType="com.example.demo.entity.Doctor">
        update doctor
        <trim prefix="SET" prefixOverrides=",">
            <if test="null != doc.doctorName and '' != pro.doctorName">doctor_name=#{doc.doctorName},</if>
            <if test="null != doc.doctorDepartment and '' != doc.doctorDepartment">doctor_department=#{doc.doctorDepartment},</if>
            <if test="null != doc.doctorPrice and -1 != pro.doctorPrice">doctor_price=#{doc.doctorPrice},</if>
            <if test="null != doc.doctorImg and '' != doc.doctorImg">doctor_img=#{doc.doctorImg},</if>
            <if test="null != doc.doctorType and -1 != doc.doctorType">doctor_type=#{doc.doctorType},</if>
            <if test="null != doc.doctorIsOrder and -1 != pro.doctorIsOrder">doctor_order=#{doc.doctorIsOrder},</if>
            <if test="null != doc.doctorSpeciality and '' != doc.doctorSpeciality">doctor_speciality=#{doc.doctorSpeciality},</if>
            <if test="null != doc.doctorSynopsis and ''  != doc.doctorSynopsis">doctor_synopsis=#{doc.doctorSynopsis},</if>
        </trim>
        where doctor_id = #{doc.doctorId}
    </update>
    <delete id="deleteDoctor">
        DELETE FROM doctor WHERE doctor_id = #{doctorId}
    </delete>
</mapper>